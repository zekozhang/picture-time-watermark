// Generated by view binder compiler. Do not edit!
package com.example.picturemarker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picturemarker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWatermarkBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button btnCustomWatermark;

  @NonNull
  public final Button btnQuickWatermark;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView ivPreview;

  private ActivityWatermarkBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton btnBack,
      @NonNull Button btnCustomWatermark, @NonNull Button btnQuickWatermark,
      @NonNull Guideline guideline, @NonNull ImageView ivPreview) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnCustomWatermark = btnCustomWatermark;
    this.btnQuickWatermark = btnQuickWatermark;
    this.guideline = guideline;
    this.ivPreview = ivPreview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWatermarkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWatermarkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_watermark, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWatermarkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnCustomWatermark;
      Button btnCustomWatermark = ViewBindings.findChildViewById(rootView, id);
      if (btnCustomWatermark == null) {
        break missingId;
      }

      id = R.id.btnQuickWatermark;
      Button btnQuickWatermark = ViewBindings.findChildViewById(rootView, id);
      if (btnQuickWatermark == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.ivPreview;
      ImageView ivPreview = ViewBindings.findChildViewById(rootView, id);
      if (ivPreview == null) {
        break missingId;
      }

      return new ActivityWatermarkBinding((ConstraintLayout) rootView, btnBack, btnCustomWatermark,
          btnQuickWatermark, guideline, ivPreview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
